// <auto-generated />
using System;
using FridgeManagementSystemV2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FridgeManagementSystemV2.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FridgeManagementSystemV2.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("FridgeManagementSystemV2.Models.FaultReport", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<int>("FridgeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("TechnicianId")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.HasIndex("FridgeId");

                    b.HasIndex("TechnicianId");

                    b.ToTable("FaultReports");
                });

            modelBuilder.Entity("FridgeManagementSystemV2.Models.Fridge", b =>
                {
                    b.Property<int>("FridgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FridgeId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InstallationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModelNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FridgeId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Fridges");
                });

            modelBuilder.Entity("FridgeManagementSystemV2.Models.MaintenanceVisit", b =>
                {
                    b.Property<int>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitId"));

                    b.Property<int>("FridgeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MainDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("MainTime")
                        .HasColumnType("time");

                    b.Property<int>("TechnicianId")
                        .HasColumnType("int");

                    b.HasKey("VisitId");

                    b.HasIndex("FridgeId");

                    b.HasIndex("TechnicianId");

                    b.ToTable("MaintenanceVisits");
                });

            modelBuilder.Entity("FridgeManagementSystemV2.Models.ServicePerformed", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<int>("MaintenanceVisitVisitId")
                        .HasColumnType("int");

                    b.Property<string>("ServiceDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("ServiceId");

                    b.HasIndex("MaintenanceVisitVisitId");

                    b.ToTable("ServicesPerformed");
                });

            modelBuilder.Entity("FridgeManagementSystemV2.Models.Technician", b =>
                {
                    b.Property<int>("TechnicianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TechnicianId"));

                    b.Property<string>("TechCertificationDetails")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TechContactDetails")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TechName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TechnicianId");

                    b.ToTable("Technicians");
                });

            modelBuilder.Entity("FridgeManagementSystemV2.Models.FaultReport", b =>
                {
                    b.HasOne("FridgeManagementSystemV2.Models.Fridge", "Fridge")
                        .WithMany("FaultReports")
                        .HasForeignKey("FridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FridgeManagementSystemV2.Models.Technician", null)
                        .WithMany("FaultReports")
                        .HasForeignKey("TechnicianId");

                    b.Navigation("Fridge");
                });

            modelBuilder.Entity("FridgeManagementSystemV2.Models.Fridge", b =>
                {
                    b.HasOne("FridgeManagementSystemV2.Models.Customer", "Customer")
                        .WithMany("Fridges")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("FridgeManagementSystemV2.Models.MaintenanceVisit", b =>
                {
                    b.HasOne("FridgeManagementSystemV2.Models.Fridge", "Fridge")
                        .WithMany()
                        .HasForeignKey("FridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FridgeManagementSystemV2.Models.Technician", "Technician")
                        .WithMany()
                        .HasForeignKey("TechnicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fridge");

                    b.Navigation("Technician");
                });

            modelBuilder.Entity("FridgeManagementSystemV2.Models.ServicePerformed", b =>
                {
                    b.HasOne("FridgeManagementSystemV2.Models.MaintenanceVisit", "MaintenanceVisit")
                        .WithMany()
                        .HasForeignKey("MaintenanceVisitVisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaintenanceVisit");
                });

            modelBuilder.Entity("FridgeManagementSystemV2.Models.Customer", b =>
                {
                    b.Navigation("Fridges");
                });

            modelBuilder.Entity("FridgeManagementSystemV2.Models.Fridge", b =>
                {
                    b.Navigation("FaultReports");
                });

            modelBuilder.Entity("FridgeManagementSystemV2.Models.Technician", b =>
                {
                    b.Navigation("FaultReports");
                });
#pragma warning restore 612, 618
        }
    }
}
